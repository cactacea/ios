//
// Information.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class Information: Codable {

    public enum InformationType: String, Codable { 
        case _operator = "operator"
        case invitation = "invitation"
        case friendrequest = "friendRequest"
        case tweet = "tweet"
        case tweetreply = "tweetReply"
        case commentreply = "commentReply"
    }
    public var id: Int64
    public var informationType: InformationType
    public var contentId: Int64?
    public var message: String
    public var url: String
    public var notifiedAt: Int64
    public var next: Int64


    
    public init(id: Int64, informationType: InformationType, contentId: Int64?, message: String, url: String, notifiedAt: Int64, next: Int64) {
        self.id = id
        self.informationType = informationType
        self.contentId = contentId
        self.message = message
        self.url = url
        self.notifiedAt = notifiedAt
        self.next = next
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(id, forKey: "id")
        try container.encode(informationType, forKey: "informationType")
        try container.encodeIfPresent(contentId, forKey: "contentId")
        try container.encode(message, forKey: "message")
        try container.encode(url, forKey: "url")
        try container.encode(notifiedAt, forKey: "notifiedAt")
        try container.encode(next, forKey: "next")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        id = try container.decode(Int64.self, forKey: "id")
        informationType = try container.decode(InformationType.self, forKey: "informationType")
        contentId = try container.decodeIfPresent(Int64.self, forKey: "contentId")
        message = try container.decode(String.self, forKey: "message")
        url = try container.decode(String.self, forKey: "url")
        notifiedAt = try container.decode(Int64.self, forKey: "notifiedAt")
        next = try container.decode(Int64.self, forKey: "next")
    }
}

