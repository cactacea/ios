//
// GroupInvitation.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class GroupInvitation: Codable {

    public enum InvitationStatus: String, Codable { 
        case noresponded = "noResponded"
        case accepted = "accepted"
        case rejected = "rejected"
    }
    public var id: Int64
    public var group: Group
    public var by: Account
    public var invitationStatus: InvitationStatus
    public var invitedAt: Int64


    
    public init(id: Int64, group: Group, by: Account, invitationStatus: InvitationStatus, invitedAt: Int64) {
        self.id = id
        self.group = group
        self.by = by
        self.invitationStatus = invitationStatus
        self.invitedAt = invitedAt
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(id, forKey: "id")
        try container.encode(group, forKey: "group")
        try container.encode(by, forKey: "by")
        try container.encode(invitationStatus, forKey: "invitationStatus")
        try container.encode(invitedAt, forKey: "invitedAt")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        id = try container.decode(Int64.self, forKey: "id")
        group = try container.decode(Group.self, forKey: "group")
        by = try container.decode(Account.self, forKey: "by")
        invitationStatus = try container.decode(InvitationStatus.self, forKey: "invitationStatus")
        invitedAt = try container.decode(Int64.self, forKey: "invitedAt")
    }
}

