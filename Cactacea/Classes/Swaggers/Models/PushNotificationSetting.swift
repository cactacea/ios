//
// PushNotificationSetting.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation



open class PushNotificationSetting: Codable {

    public var followerFeed: Bool
    public var feedComment: Bool
    public var groupMessage: Bool
    public var directMessage: Bool
    public var groupInvitation: Bool
    public var showMessage: Bool


    
    public init(followerFeed: Bool, feedComment: Bool, groupMessage: Bool, directMessage: Bool, groupInvitation: Bool, showMessage: Bool) {
        self.followerFeed = followerFeed
        self.feedComment = feedComment
        self.groupMessage = groupMessage
        self.directMessage = directMessage
        self.groupInvitation = groupInvitation
        self.showMessage = showMessage
    }
    

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {

        var container = encoder.container(keyedBy: String.self)

        try container.encode(followerFeed, forKey: "followerFeed")
        try container.encode(feedComment, forKey: "feedComment")
        try container.encode(groupMessage, forKey: "groupMessage")
        try container.encode(directMessage, forKey: "directMessage")
        try container.encode(groupInvitation, forKey: "groupInvitation")
        try container.encode(showMessage, forKey: "showMessage")
    }

    // Decodable protocol methods

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: String.self)

        followerFeed = try container.decode(Bool.self, forKey: "followerFeed")
        feedComment = try container.decode(Bool.self, forKey: "feedComment")
        groupMessage = try container.decode(Bool.self, forKey: "groupMessage")
        directMessage = try container.decode(Bool.self, forKey: "directMessage")
        groupInvitation = try container.decode(Bool.self, forKey: "groupInvitation")
        showMessage = try container.decode(Bool.self, forKey: "showMessage")
    }
}

